package org.xopen.gpevaluation.rcp;

import org.apache.commons.configuration.ConfigurationException;
import org.eclipse.core.commands.Command;
import org.eclipse.ui.PlatformUI;
import org.eclipse.ui.application.IWorkbenchWindowConfigurer;
import org.eclipse.ui.application.WorkbenchAdvisor;
import org.eclipse.ui.application.WorkbenchWindowAdvisor;
import org.eclipse.ui.commands.ICommandService;
import org.xopen.gpevaluation.rcp.handler.CommandIds;
import org.xopen.gpevaluation.rcp.model.Session;

public class ApplicationWorkbenchAdvisor extends WorkbenchAdvisor {

	private static final String PERSPECTIVE_ID = "org.xopen.gpevaluation.rcp.perspective";

	public WorkbenchWindowAdvisor createWorkbenchWindowAdvisor(
			IWorkbenchWindowConfigurer configurer) {
		return new ApplicationWorkbenchWindowAdvisor(configurer);
	}

	public String getInitialWindowPerspectiveId() {
		return PERSPECTIVE_ID;
	}

	@Override
	public void postStartup() {
		ICommandService cmdService = (ICommandService) PlatformUI
				.getWorkbench().getService(ICommandService.class);
		Command logout = cmdService.getCommand(CommandIds.LOGOUT);
		String userName = "";
		try {
			userName = Session.getInstance().getUser().getFullName();
		} catch (ConfigurationException e) {
		}
		logout.define(Messages.ApplicationWorkbenchAdvisor_2 + userName, Messages.ApplicationWorkbenchAdvisor_3, cmdService
				.getCategory(CommandIds.AUTOGENERATED_CATEGORY_ID));
	}
}
